/* 1. the lifetime of a Java object
   2. garbage collection (JVM)
   updated on 1/09/2020
 */

public class LifeTime {

	private Employee w;
	private int      n;

	// the default constructor will be generated by the compiler

	public void change( ) {

		if ( w == null )

		     System.out.println( "w is a null reference!\n" );

		w = new Employee( 111, "Oh", "zzzzz", "2007"); // an object is created(heap storage)
	}

	public String toString() { // which class?

		String s = "<<<<<<< THE LIFETIME OF A JAVA OBJECT >>>>>>>\n\n";

        s += w; // what is w?

        s += "<<<<<<< n:" + n + " >>>>>>>";

        return s;
 	}

	public Employee foo() {

        System.out.println( "... create an object inside foo()..." );

      	Employee t = new Employee( 2, "Hi", "???", "345" ); // an object is created(heap storage)

		return t;
	}

	public static void main( String[] args ) {

	   LifeTime demo = new LifeTime();

	   demo.change();

	   System.out.println( demo );

	   System.out.println( "......." );

	   Employee d = demo.foo();

	   System.out.println( d + "\n....... How many objects are still alive in the main?" );
	   
	   /* garbage collection on JVM */
	   d = null;
	   d = new Employee();
	   System.out.println(d);
	}
}